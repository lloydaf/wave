(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{sZ6l:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return d}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),l=n("TjRS"),i=n("K0tc"),r=n("S+hm"),o=n("ZFoC"),c=n("xnqT"),s=n("/VS8");n("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/SelectList/docs/SelectList.mdx"}});var m={_frontmatter:p},u=l.a;function d(e){var t,n=e.components,d=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(u,b({},m,d,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"selectlist"},"SelectList"),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)(r.a,{mdxType:"SelectListPropsTable"}),Object(a.b)("br",null),Object(a.b)(c.a,{component:"SelectList",supportedProps:["margin","width"],mdxType:"StyledSystemLinks"}),Object(a.b)("p",null,"Additionally, most of the properties for the react-select component are passed to the component (read more on\n",Object(a.b)("a",b({parentName:"p"},{href:"https://react-select.com/props#select-props"}),"react-select.com/props"),")"),Object(a.b)("h3",{id:"disabled-props"},"Disabled props"),Object(a.b)("p",null,"The following properties have been disabled since they aren't supported by this library."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"'react-select/async'")," (Feature currently not supported at FN)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"theme")," (Wave's theme)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"makeAnimated"),"(Feature currently not supported at FN)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"classNamePrefix")," (directly defined into Wave SelectList)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"isLoading")," (Async not implemented yet)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"loadingMessage")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"isRtl"))),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)(o.b,{__position:2,__code:"<SelectList\n  id=\"select-list-playground\"\n  label=\"City\"\n  onChange={change => console.log(change)}\n  options={[\n    {\n      label: 'Barcelona',\n      value: 'bcn',\n    },\n    {\n      label: 'Hamburg',\n      value: 'ham',\n    },\n    {\n      label: 'Paris',\n      value: 'par',\n      isDisabled: true,\n    },\n  ]}\n/>",__scope:(t={props:d,DefaultLayout:l.a,SelectList:i.a,SelectListPropsTable:r.a,Playground:o.b,StyledSystemLinks:c.a,Combination:s.a},t.DefaultLayout=l.a,t._frontmatter=p,t),mdxType:"Playground"},Object(a.b)(i.a,{id:"select-list-playground",label:"City",onChange:function(e){return console.log(e)},options:[{label:"Barcelona",value:"bcn"},{label:"Hamburg",value:"ham"},{label:"Paris",value:"par",isDisabled:!0}],mdxType:"SelectList"})),Object(a.b)("h2",{id:"combinations"},"Combinations"),Object(a.b)(s.a,{variant:["boxed","bottom-lined"],size:["medium","small"],inverted:[!1,!0],error:[!1,!0],isMulti:[!1,!0],mdxType:"Combination"},(function(e,t){return Object(a.b)(i.a,b({key:t},e,{value:{label:"Group"},isClearable:!1,mdxType:"SelectList"}))})),Object(a.b)("h2",{id:"testing"},"Testing"),Object(a.b)("p",null,"Testing this natively using ",Object(a.b)("inlineCode",{parentName:"p"},"selectOptions")," from ",Object(a.b)("inlineCode",{parentName:"p"},"@testing-library/user-event")," is difficult as this is built on top of ",Object(a.b)("a",b({parentName:"p"},{href:"https://react-select.com"}),"react-select"),", and so doesn't contain a native select element.\nYou can test it easily using the ",Object(a.b)("a",b({parentName:"p"},{href:"https://github.com/romgain/react-select-event"}),"react-select-event")," library like it's shown below\n(check ",Object(a.b)("a",b({parentName:"p"},{href:"https://testing-library.com/docs/ecosystem-react-select-event/"}),"here")," for more info)"),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-jsx"}),'import { render, within } from \'@testing-library/react\'\nimport selectEvent from \'react-select-event\'\n\ntest(\'should select option\', () => {\n    const { queryByLabelText } = render(\n        <Box aria-label="SearchList Container">\n            <SelectList\n                id="select-list-playground"\n                label="City"\n                onChange={(change) => console.log(change)}\n                options={[\n                    {\n                        label: "Barcelona",\n                        value: "bcn"\n                    },\n                    {\n                        label: "Hamburg",\n                        value: "ham"\n                    },\n                    {\n                        label: "Paris",\n                        value: "par"\n                    }\n                ]}\n            />\n        </Box>\n    );\n    const container = queryByLabelText(\n        \'SearchList Container\',\n    )\n\n    const inputbox = within(\n        container,\n    ).queryByRole(\'textbox\')\n            \n    // this will open the menu\n    user.type(inputbox, \'Bar\')\n\n    // use react-select-event to select the option you want\n    await selectEvent.select(container, [\'Barcelona\'])\n\n});\n')))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/SelectList/docs/SelectList.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-select-list-docs-select-list-mdx-cc5b0f0efcda5495a375.js.map