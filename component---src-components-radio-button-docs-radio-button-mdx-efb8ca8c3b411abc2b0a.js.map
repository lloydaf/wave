{"version":3,"sources":["webpack:///../src/components/RadioButton/docs/RadioButton.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","component","supportedProps","__position","__code","__scope","Playground","RadioButton","RadioButtonPropsTable","Combination","StyledSystemLinks","name","label","error","disabled","i","key","isMDXComponent"],"mappings":"qiBAWO,IAAMA,EAAe,Q,iOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,sMACwD,mBAAGC,WAAW,KAAQ,CAC1E,KAAQ,yBAD4C,YADxD,cAIA,8DAA6C,0BAAYA,WAAW,KAAvB,UAA7C,kCAAkI,0BAAYA,WAAW,KAAvB,UAAlI,2DACuB,mBAAGA,WAAW,KAAQ,CACzC,KAAQ,qBADW,QADvB,eAIA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAuBD,QAAQ,0BAC/B,uBACA,YAAC,IAAD,CAAmBE,UAAU,cAAcC,eAAgB,CAAC,UAAWH,QAAQ,sBAC/E,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,2JAAwKC,SAAO,GAChNP,QACAH,kBACAW,eACAC,gBACAC,0BACAC,gBACAC,uBAPgN,gBAQhNf,IARgN,EAShNH,eATgN,GAU/MO,QAAQ,cACX,YAAC,IAAD,CAAaY,KAAK,UAAUC,MAAM,OAAOb,QAAQ,gBACjD,uBACA,YAAC,IAAD,CAAaY,KAAK,UAAUC,MAAM,UAAUb,QAAQ,gBACpD,uBACA,YAAC,IAAD,CAAaY,KAAK,UAAUC,MAAM,OAAOb,QAAQ,iBAEjD,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAac,MAAO,EAAC,GAAO,GAAOC,SAAU,EAAC,GAAO,GAAOf,QAAQ,gBACnE,SAACD,EAAOiB,GAAR,OAAc,YAAC,IAAD,GAAaC,IAAKD,GAAOjB,EAAzB,CAAgCc,MAAM,SAASb,QAAQ,0B,+NAM1EH,EAAWqB,gBAAiB","file":"component---src-components-radio-button-docs-radio-button-mdx-efb8ca8c3b411abc2b0a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { RadioButton } from '../RadioButton';\nimport { RadioButtonPropsTable } from './RadioButtonPropsTable.tsx';\nimport { Combination } from '../../../docs/Combination';\nimport { StyledSystemLinks } from '../../../docs/StyledSystemLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"radiobutton\"\n    }}>{`RadioButton`}</h1>\n    <p>{`Use radio buttons when you have a few options that a user can choose from. Never use radio buttons if the user can\nselect more than one option from a list (consider using a `}<a parentName=\"p\" {...{\n        \"href\": \"/components/Checkbox\"\n      }}>{`Checkbox`}</a>{` instead).`}</p>\n    <p>{`You can provide the label as either a `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` or as a react component. If a `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` is provided as the label, it\nwill be wrapped with the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/text\"\n      }}>{`Text`}</a>{` component.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <RadioButtonPropsTable mdxType=\"RadioButtonPropsTable\" />\n    <br />\n    <StyledSystemLinks component=\"RadioButton\" supportedProps={['margin']} mdxType=\"StyledSystemLinks\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={2} __code={'<RadioButton name=\\\"example\\\" label=\\\"Taxi\\\" />\\n<br />\\n<RadioButton name=\\\"example\\\" label=\\\"Scooter\\\" />\\n<br />\\n<RadioButton name=\\\"example\\\" label=\\\"Bike\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      RadioButton,\n      RadioButtonPropsTable,\n      Combination,\n      StyledSystemLinks,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <RadioButton name=\"example\" label=\"Taxi\" mdxType=\"RadioButton\" />\n    <br />\n    <RadioButton name=\"example\" label=\"Scooter\" mdxType=\"RadioButton\" />\n    <br />\n    <RadioButton name=\"example\" label=\"Bike\" mdxType=\"RadioButton\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"combinations\"\n    }}>{`Combinations`}</h2>\n    <Combination error={[false, true]} disabled={[false, true]} mdxType=\"Combination\">\n    {(props, i) => <RadioButton key={i} {...props} label=\"Option\" mdxType=\"RadioButton\" />}\n    </Combination>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}