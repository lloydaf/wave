{"version":3,"sources":["webpack:///../src/components/FilePicker/docs/FilePicker.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","FilePicker","Button","Box","ControlledErrorFilePicker","maxWidth","width","mx","p","accept","buttonText","label","name","onChange","e","console","log","onFileChange","file","mt","onSubmit","alert","target","elements","avatar","value","files","preventDefault","mb","type","isMDXComponent"],"mappings":"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","file":"component---src-components-file-picker-docs-file-picker-mdx-4d6029522bce664c1346.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { FilePicker, Button, Box } from '../';\nimport { ControlledErrorFilePicker } from './ControlledErrorFilePicker';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"filepicker\"\n    }}>{`FilePicker`}</h1>\n    <p>{`This component itâ€™s a trigger opening the native file uploader.\nThis component uses default Web input type file check `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file\"\n      }}>{`Mozilla Input Docs`}</a>{`\nif you need to know more about the supported attributes and values`}</p>\n    <h2 {...{\n      \"id\": \"appearance\"\n    }}>{`Appearance`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`File title`}</strong>{`: This provides a clear description of what the user should upload. If long, takes as many lines as needed extending the height of the component.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Button label`}</strong>{`: Describes the main action, it works better when short`}</li>\n      <li parentName=\"ul\">{`It is recommended to place this component together with a helper text to provide additional help for what's expected. Helper text should only appear if the user open the file explorer and doesn't select anything.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"placement\"\n    }}>{`Placement`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`They are mainly used in forms but can also appear in other places as a stand alone component, like item or user registration screens.`}</li>\n      <li parentName=\"ul\">{`It should be placed with a minimum of 8px `}<em parentName=\"li\">{`(\"Spaces\" value 1 for our default spaces values)`}</em>{` margin on each side`}</li>\n      <li parentName=\"ul\">{`It should be placed vertically aligned`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"behaviour\"\n    }}>{`Behaviour`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The user may select 1 file at a time.`}</li>\n      <li parentName=\"ul\">{`By default, any file format is accepted, but you can add parameters to validate a specific file format.`}</li>\n      <li parentName=\"ul\">{`The action of clicking Browse file will trigger a browser-specific upload window.`}</li>\n      <li parentName=\"ul\">{`Once the user selects the file, the browser-specific select window closes and the files will appear below the File title label.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"error\"\n    }}>{`Error`}</h3>\n    <p>{`Below you have an example of how you can properly show an error using the `}<strong parentName=\"p\">{`HelperText`}</strong>{`. You can try to submit any file to trigger the error\nand clean the input by canceling the selection to remove the error state.`}</p>\n    <ControlledErrorFilePicker mdxType=\"ControlledErrorFilePicker\" />\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <p>{`The example below will demostrate how to create compositions of `}<inlineCode parentName=\"p\">{`FilePicker`}</inlineCode></p>\n    <Playground __position={1} __code={'<Box maxWidth=\\\"100%\\\" width=\\\"30rem\\\" mx=\\\"auto\\\" p={2}>\\n  <FilePicker\\n    accept=\\\"image/png, image/jpeg\\\"\\n    buttonText=\\\"Browse files\\\"\\n    label=\\\"A picture of you\\\"\\n    name=\\\"avatar\\\"\\n    onChange={e => console.log(\\'onChange\\', e)}\\n    onFileChange={(file, e) => console.log(\\'onFileChange\\', file, e)}\\n  />\\n  <FilePicker\\n    accept=\\\"image/png, image/jpeg\\\"\\n    buttonText=\\\"Browse files\\\"\\n    label=\\\"A logo you like\\\"\\n    name=\\\"logo\\\"\\n    onChange={e => console.log(\\'onChange\\', e)}\\n    onFileChange={(file, e) => console.log(\\'onFileChange\\', file, e)}\\n    mt={1}\\n  />\\n  <FilePicker\\n    accept=\\\"image/png, image/jpeg\\\"\\n    buttonText=\\\"Browse files\\\"\\n    label=\\\"This provides a clear description of what the user should upload. Can be multiline\\\"\\n    name=\\\"logo\\\"\\n    onChange={e => console.log(\\'onChange\\', e)}\\n    onFileChange={(file, e) => console.log(\\'onFileChange\\', file, e)}\\n    mt={1}\\n  />\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      FilePicker,\n      Button,\n      Box,\n      ControlledErrorFilePicker,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box maxWidth=\"100%\" width=\"30rem\" mx=\"auto\" p={2} mdxType=\"Box\">\n    <FilePicker accept=\"image/png, image/jpeg\" buttonText=\"Browse files\" label=\"A picture of you\" name=\"avatar\" onChange={e => console.log('onChange', e)} onFileChange={(file, e) => console.log('onFileChange', file, e)} mdxType=\"FilePicker\" />\n    <FilePicker accept=\"image/png, image/jpeg\" buttonText=\"Browse files\" label=\"A logo you like\" name=\"logo\" onChange={e => console.log('onChange', e)} onFileChange={(file, e) => console.log('onFileChange', file, e)} mt={1} mdxType=\"FilePicker\" />\n    <FilePicker accept=\"image/png, image/jpeg\" buttonText=\"Browse files\" label=\"This provides a clear description of what the user should upload. Can be multiline\" name=\"logo\" onChange={e => console.log('onChange', e)} onFileChange={(file, e) => console.log('onFileChange', file, e)} mt={1} mdxType=\"FilePicker\" />\n  </Box>\n    </Playground>\n    <p>{`In the real world you may need to deal with the `}<inlineCode parentName=\"p\">{`FilePicker`}</inlineCode>{` within a form that will handle the submission of the file. Below you will find a snippet\nthat can help as example.`}</p>\n    <p><strong parentName=\"p\">{`Tip:`}</strong>{` The `}<inlineCode parentName=\"p\">{`FilePicker`}</inlineCode>{` exposes an additional callback of `}<inlineCode parentName=\"p\">{`onFileChange`}</inlineCode>{` which signature is `}<inlineCode parentName=\"p\">{`(file, event)`}</inlineCode>{`. The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/es/docs/Web/API/File\"\n      }}>{`File`}</a>{`\nand the standard input event. This is a convenient to use `}<inlineCode parentName=\"p\">{`file`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`e.target.elements.avatar.files[0]`}</inlineCode>{` check the console while using the example below.`}</p>\n    <Playground __position={2} __code={'<Box maxWidth=\\\"100%\\\" width=\\\"30rem\\\" mx=\\\"auto\\\">\\n  <form\\n    onSubmit={e => {\\n      alert(`\\n      About to submit ${e.target.elements.avatar.value}.\\n      Check console to see the value provided by the Web File API.\\n      more at https://developer.mozilla.org/es/docs/Web/API/File\\n    `)\\n      console.log(e.target.elements.avatar.files[0])\\n      e.preventDefault()\\n    }}\\n  >\\n    <Box mb={2}>\\n      <FilePicker\\n        accept=\\\"image/png, image/jpeg\\\"\\n        buttonText=\\\"Browse files\\\"\\n        label=\\\"A picture of you\\\"\\n        name=\\\"avatar\\\"\\n        onChange={e => console.log(\\'onChange\\', e)}\\n        onFileChange={(file, e) => console.log(\\'onFileChange\\', file, e)}\\n      />\\n    </Box>\\n    <Button type=\\\"submit\\\">Submit</Button>\\n  </form>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      FilePicker,\n      Button,\n      Box,\n      ControlledErrorFilePicker,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box maxWidth=\"100%\" width=\"30rem\" mx=\"auto\" mdxType=\"Box\">\n    <form onSubmit={e => {\n          alert(`\n        About to submit ${e.target.elements.avatar.value}.\n        Check console to see the value provided by the Web File API.\n        more at https://developer.mozilla.org/es/docs/Web/API/File\n      `);\n          console.log(e.target.elements.avatar.files[0]);\n          e.preventDefault();\n        }}>\n      <Box mb={2} mdxType=\"Box\">\n        <FilePicker accept=\"image/png, image/jpeg\" buttonText=\"Browse files\" label=\"A picture of you\" name=\"avatar\" onChange={e => console.log('onChange', e)} onFileChange={(file, e) => console.log('onFileChange', file, e)} mdxType=\"FilePicker\" />\n      </Box>\n      <Button type=\"submit\" mdxType=\"Button\">Submit</Button>\n    </form>\n  </Box>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}