{"version":3,"sources":["webpack:///../src/components/Divider/docs/Divider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","offset","__position","__code","__scope","Playground","ItemWrapper","Divider","WrappedHorizontalDivider","WrappedVerticalDivider","SectionPlaceholder","style","display","vertical","isMDXComponent"],"mappings":"yhBAUO,IAAMA,EAAe,Q,yNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,qBAAG,sBAAQC,WAAW,KAAnB,uDACH,+IACA,uBACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,8IACA,2EAA0D,sBAAQA,WAAW,KAAnB,YAA1D,YAAmH,0BAAYA,WAAW,KAAvB,QAAnH,uCACA,uBACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,wDAAuC,sBAAQA,WAAW,KAAnB,mBAAvC,0BACA,qBAAG,sBAAQA,WAAW,KAAnB,wHACH,iIACA,uBACA,iBAAQ,CACN,GAAM,eADR,eAGA,oEACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,UAApB,qEAAqI,kBAAIA,WAAW,MAAf,MAArI,KAA0K,kBAAIA,WAAW,MAAf,MAA1K,wBAAkO,uBAChO,yBAEJ,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,kCADR,oCAGA,YAAC,IAAD,CAAaD,QAAQ,eACrB,YAAC,IAAD,CAA0BE,OAAO,OAAOF,QAAQ,8BAEhD,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,kBAIL,uBACA,iBAAQ,CACN,GAAM,6BADR,+BAGA,YAAC,IAAD,CAAaD,QAAQ,eACrB,YAAC,IAAD,CAA0BE,OAAQ,EAAGF,QAAQ,8BAE7C,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,6BAIL,uBACA,iBAAQ,CACN,GAAM,gCADR,kCAGA,YAAC,IAAD,CAAaD,QAAQ,eACrB,YAAC,IAAD,CAAwBE,OAAO,OAAOF,QAAQ,4BAE9C,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,2BAIL,uBACA,iBAAQ,CACN,GAAM,2BADR,6BAGA,YAAC,IAAD,CAAaD,QAAQ,eACrB,YAAC,IAAD,CAAwBE,OAAQ,EAAGF,QAAQ,4BAE3C,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,2BAIL,uBACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYE,WAAY,GAAIC,OAAQ,0EAA2EC,SAAO,GACpHN,QACAH,kBACAU,eACAC,gBACAC,YACAC,6BACAC,2BACAC,wBARoH,gBASpHf,IAToH,EAUpHH,eAVoH,GAWnHO,QAAQ,cACX,wCACI,YAAC,IAAD,CAASA,QAAQ,YACrB,yCAEA,YAAC,IAAD,CAAYG,WAAY,GAAIC,OAAQ,sOAAyOC,SAAO,GAClRN,QACAH,kBACAU,eACAC,gBACAC,YACAC,6BACAC,2BACAC,wBARkR,gBASlRf,IATkR,EAUlRH,eAVkR,GAWjRO,QAAQ,cAIX,mBAAKY,MAAO,CACRC,QAAS,SAET,YAAC,IAAD,CAAoBb,QAAQ,sBAA5B,aACA,YAAC,IAAD,CAASc,UAAQ,EAACd,QAAQ,YAC1B,YAAC,IAAD,CAAoBA,QAAQ,sBAA5B,qB,uNAORH,EAAWkB,gBAAiB","file":"component---src-components-divider-docs-divider-mdx-2d5849cbe1cb5283f0fd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { ItemWrapper } from '../../../../docs/components/ItemWrapper.ts';\nimport { Divider } from '../Divider.tsx';\nimport { WrappedHorizontalDivider, WrappedVerticalDivider, SectionPlaceholder } from './WrappedDivider.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <p><strong parentName=\"p\">{`Primary UI element for visually separating content`}</strong></p>\n    <p>{`Renders a divider UI component: horizontal or vertical line that visually separates two pieces of data, content or UI.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"default-behaviour\"\n    }}>{`Default Behaviour`}</h3>\n    <p>{`The horizontal divider takes up the full available width and the vertical divider takes up the full available height.`}</p>\n    <p>{`The horizontal divider is rendered by default. Set `}<strong parentName=\"p\">{`vertical`}</strong>{` prop to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` to change the divider orientation.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"divider-vs-border\"\n    }}>{`Divider vs Border`}</h3>\n    <p>{`The default color of Divider is `}<strong parentName=\"p\">{`$border.primary`}</strong>{` (#C6CDD4), however...`}</p>\n    <p><strong parentName=\"p\">{`Divider is NOT a border, and should not be used as such. Please do not use this component as a border for elements.`}</strong></p>\n    <p>{`Divider is naturally expected to have a certain offset from the elements it is 'dividing' or separating.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"style-props\"\n    }}>{`Style Props`}</h3>\n    <p>{`The Divider has the following design props:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`offset`}</strong>{` - set the divider offset from the content it is separating (uses `}<em parentName=\"li\">{`mx`}</em>{`, `}<em parentName=\"li\">{`my`}</em>{` styled system props)`}<br />\n        <br /></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"horizontal-with-default-offset\"\n    }}>{`Horizontal (with default offset)`}</h3>\n    <ItemWrapper mdxType=\"ItemWrapper\">\n    <WrappedHorizontalDivider offset='1rem' mdxType=\"WrappedHorizontalDivider\" />\n    </ItemWrapper>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Divider />\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"horizontal-without-offset\"\n    }}>{`Horizontal (without offset)`}</h3>\n    <ItemWrapper mdxType=\"ItemWrapper\">\n    <WrappedHorizontalDivider offset={0} mdxType=\"WrappedHorizontalDivider\" />\n    </ItemWrapper>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Divider offset={0} />\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"vertical-with-default-offset\"\n    }}>{`Vertical (with default offset)`}</h3>\n    <ItemWrapper mdxType=\"ItemWrapper\">\n    <WrappedVerticalDivider offset='1rem' mdxType=\"WrappedVerticalDivider\" />\n    </ItemWrapper>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Divider vertical />\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"vertical-without-offset\"\n    }}>{`Vertical (without offset)`}</h3>\n    <ItemWrapper mdxType=\"ItemWrapper\">\n    <WrappedVerticalDivider offset={0} mdxType=\"WrappedVerticalDivider\" />\n    </ItemWrapper>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Divider vertical />\n`}</code></pre>\n    <br />\n    <h1 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h1>\n    <Playground __position={11} __code={'<section>Section 1</section>\\n<Divider />\\n<section>Section 2</section>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ItemWrapper,\n      Divider,\n      WrappedHorizontalDivider,\n      WrappedVerticalDivider,\n      SectionPlaceholder,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <section>Section 1</section>\n        <Divider mdxType=\"Divider\" />\n    <section>Section 2</section>\n    </Playground>\n    <Playground __position={12} __code={'{/* We need the row flow to see vertical divider */}\\n<div style={{ display: \\'flex\\' }}>\\n  <SectionPlaceholder>Section 1</SectionPlaceholder>\\n  <Divider vertical />\\n  <SectionPlaceholder>Section 2</SectionPlaceholder>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ItemWrapper,\n      Divider,\n      WrappedHorizontalDivider,\n      WrappedVerticalDivider,\n      SectionPlaceholder,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {\n        /* We need the row flow to see vertical divider */\n      }\n    <div style={{\n        display: 'flex'\n      }}>\n        <SectionPlaceholder mdxType=\"SectionPlaceholder\">Section 1</SectionPlaceholder>\n        <Divider vertical mdxType=\"Divider\" />\n        <SectionPlaceholder mdxType=\"SectionPlaceholder\">Section 2</SectionPlaceholder>\n    </div>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}